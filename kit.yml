---
name:     jumpbox
author:   
  - Geoff Franks (geoff@starkandwayne.com)
  - Dennis Bell  (dennis@starkandwayne.com)
homepage: https://github.com/genesis-community/jumpbox-genesis-kit
github:   https://github.com/genesis-community/jumpbox-genesis-kit

description: |
  This kit creates the manifest to build an isolated bastion jumpbox
  to restrict access to other boxes in you BOSH deployments, along
  with a set of common tools and consistant user setup.

# The `subkits` top-level key identifies the available subkits
# how they are activated when `genesis new` is called, and how
# to validate them during `genesis manifest`
#
subkits:
  - prompt:  Would you like to use OpenVPN to better control user access?
    subkit:  openvpn
    default: no

  - prompt:  Would you like to use Shield to backup your users home directories?
    subkit:  shield
    default: no

  - prompt: Are you deploying the jumpbox on Azure?
    subkit: azure
    default: no

# The `certificates` top-level key describes what SSL/TLS certificates
# and custom CAs should be generated automatically for the deployment.
# This is used *purely* for auto-generating internal-use certificates
# in the deployment. For client-facing SSL certificates provided by
# the user + signed by a CA, use the `params` section to store the data
# in Vault.
certificates:
  openvpn:
    openvpn/certs:
      ca: { valid_for: 1y }
      server:
        valid_for: 6m
        names:
          - server.openvpn

# The `credentials` top-level key describes what credentials and
# secret information that genesis will auto-generate, and periodically
# rotate in order to deploy a new environment.
credentials:
  openvpn:
    openvpn/dh_params: dhparams 2048

# The `params` top-level key describes how the initial environment
# YAML file will look after a user runs `genesis new <environment name>`.
params:
  base:
    - param: hostname
      description: Override the default hostname of your jumpbox

    - param: banner
      description: A login banner, or MoTD, to display to users when they log in

    - param: hosts
      description: A list of entries to append to /etc/hosts

    - param: env_vars
      description: A map of environmental variables to be set for all users
      example: '{ NAME: "value", ANOTHER: "example" }'

    - param: bashrc
      description: |-
        Additional bash startup commands, to be included verbatim in the
        system-wide configuration.  This can be used to provide additional
        conveniences or implement site-wide policy.

  openvpn:
    - param: vpn_client_routes
      description: |-
        OpenVPN requires a list of routes to push to connecting clients. These
        should be in a format similar to "192.0.2.0 255.255.255.0".
      validate: /((^|\.)([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){4} (([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(\.|$)){4}/
      type: list
      ask: "Enter routes:"
      label: route
      min_count: 1

    - param: vpn_client_network
      default: 172.31.255.0
      description: VPN Client Network
      ask: "Enter network IP:"
      validate: /((^|\.)([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){4}$/

    - param: vpn_client_netmask
      default: 255.255.255.0
      description: VPN Client Network Mask
      ask: "Enter network mask:"
      validate: /((^|\.)([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){4}$/

  shield:
    - param: shield_public_key_vault_path
      description: |-
        The Shield agent running on the jumpbox needs the public key for the
        Shield server.  This should be generated by the Shield deployment and
        stored in your Vault.
      ask: "Enter vault path for shield public key:"
